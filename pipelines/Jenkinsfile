pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '30', daysToKeepStr: '30', artifactDaysToKeepStr: '2', artifactNumToKeepStr: '2'))
        timestamps()
    }
    parameters {
        choice(choices: ['Deploy', 'Destroy'], description: 'choose deploy to install the chart, or Destroy to uninstall the chart', name: 'ACTION')
    }
    environment {
        Action_string = "${ACTION}".toString()
        namespace     = "omer"
        release_name  = "simple-web-chart"
        
    }
    stages {
        stage('Set build description') {
            steps {
                script {
                    currentBuild.displayName = "${BUILD_NUMBER}"
                    currentBuild.description = "Selected action: ${Action_string}"
                }
            }
        }
        stage('Clone Repository') {
            steps {
                git url: "https://github.com/ogora100/simple-web-service-etoro.git", branch: "main"
            }
        }
        stage('Verify Chart Installation') {
            when {
                expression { params.ACTION == 'Deploy' }
            }
            steps {
                script {
                    // Verify if the chart is already installed
                    def CHARTINSTALLED = sh(script: "helm ls -n ${namespace}  | tail -n +2 | wc -l", returnStdout: true).trim()
                    if ("${CHARTINSTALLED}" >= 1) {
                        echo "Chart already installed, nothin to do."
                        error("Chart already installed, nothin to do.")
                    } else {
                        echo "Chart isn't installed, proceed to install chart."
                        
                    }
                    
                }
            }
        }
        stage('Verify Chart Uninstalled') {
            when {
                expression { params.ACTION == 'Destroy' }
            }
            steps {
                script {
                    // Verify if the chart is already installed
                    def CHARTINSTALLED = sh(script: "helm ls -n ${namespace}  | tail -n +2 | wc -l", returnStdout: true).trim()
                    if ("${CHARTINSTALLED}" <= 0) {
                        echo "Chart already uninstalled, nothin to do."
                        error("Chart already uninstalled, nothin to do.")
                    } else {
                        echo "Chart exists, proceed to uninstall chart."
                        
                    }
                    
                }
            }
        }
        stage('Deploy or Destroy Helm Chart') {
            steps {
                script {
                    // Check if the user specified the 'DEPLOY' parameter
                    if (params.ACTION == "Deploy") {
                        // Deploy the Helm chart
                        sh "helm install ${release_name}  ${release_name} --namespace ${namespace}"
                    } else {
                        // Destroy the Helm chart
                        sh "helm uninstall ${release_name}  --namespace ${namespace}"
                    }
                }
            }
        }
    }
}







